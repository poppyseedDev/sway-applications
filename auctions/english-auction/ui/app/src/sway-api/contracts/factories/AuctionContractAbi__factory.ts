/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.73.0
  Forc version: 0.49.2
  Fuel-Core version: 0.22.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { AuctionContractAbi, AuctionContractAbiInterface } from "../AuctionContractAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "enum AccessError",
      "components": [
        {
          "name": "AuctionIsNotClosed",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AuctionIsNotOpen",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "SenderIsNotSeller",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 15,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum InitError",
      "components": [
        {
          "name": "AuctionDurationNotProvided",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InitialPriceCannotBeZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "ReserveLessThanInitialPrice",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum InputError",
      "components": [
        {
          "name": "AuctionDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InitialPriceNotMet",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IncorrectAmountProvided",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IncorrectAssetProvided",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        9
      ]
    },
    {
      "typeId": 7,
      "type": "enum State",
      "components": [
        {
          "name": "Closed",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Open",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "enum UserError",
      "components": [
        {
          "name": "BidderIsSeller",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "UserHasAlreadyWithdrawn",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct AssetId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "struct Auction",
      "components": [
        {
          "name": "bid_asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "end_block",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "highest_bid",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "highest_bidder",
          "type": 6,
          "typeArguments": [
            {
              "name": "",
              "type": 3,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "initial_price",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "reserve_price",
          "type": 6,
          "typeArguments": [
            {
              "name": "",
              "type": 19,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "sell_asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "sell_asset_amount",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "seller",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "state",
          "type": 7,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct BidEvent",
      "components": [
        {
          "name": "amount",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct CancelAuctionEvent",
      "components": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct CreateAuctionEvent",
      "components": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "bid_asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "sell_asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "sell_asset_amount",
          "type": 19,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct WithdrawEvent",
      "components": [
        {
          "name": "asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "asset_amount",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "u32",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 19,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        }
      ],
      "name": "bid",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        }
      ],
      "name": "cancel",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "bid_asset",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "duration",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "initial_price",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "reserve_price",
          "type": 6,
          "typeArguments": [
            {
              "name": "",
              "type": 19,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "seller",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "create",
      "output": {
        "name": "",
        "type": 19,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        }
      ],
      "name": "withdraw",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        }
      ],
      "name": "auction_info",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": [
          {
            "name": "",
            "type": 12,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "auction_id",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "identity",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "deposit_balance",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": [
          {
            "name": "",
            "type": 19,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_auctions",
      "output": {
        "name": "",
        "type": 19,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 13,
        "typeArguments": []
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 10,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 11,
      "loggedType": {
        "name": "",
        "type": 14,
        "typeArguments": []
      }
    },
    {
      "logId": 12,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 13,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 14,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 15,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 16,
      "loggedType": {
        "name": "",
        "type": 16,
        "typeArguments": []
      }
    },
    {
      "logId": 17,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 18,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 19,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 20,
      "loggedType": {
        "name": "",
        "type": 17,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "b48b753af346966d0d169c0b2e3234611f65d5cfdb57c7b6e7cd6ca93707bee0",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class AuctionContractAbi__factory {
  static readonly abi = _abi;

  static readonly storageSlots = _storageSlots;

  static createInterface(): AuctionContractAbiInterface {
    return new Interface(_abi) as unknown as AuctionContractAbiInterface
  }

  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): AuctionContractAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as AuctionContractAbi
  }

  static async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<AuctionContractAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const { storageSlots } = AuctionContractAbi__factory;

    const contract = await factory.deployContract({
      storageSlots,
      ...options,
    });

    return contract as unknown as AuctionContractAbi;
  }
}
